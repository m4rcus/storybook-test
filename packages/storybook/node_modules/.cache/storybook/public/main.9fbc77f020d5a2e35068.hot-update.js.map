{"version":3,"file":"main.9fbc77f020d5a2e35068.hot-update.js","sources":["webpack:///./stories/PolyButton.tsx"],"sourcesContent":["import React from 'react';\nimport './polybutton.css';\n\ninterface PolyButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  variant?: 'contained' | 'outlined' | 'text';\n  /**\n   * What background color to use\n   */\n  color?: 'primary' | 'error' | 'warning' | 'success' | 'info';\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  disabled?: boolean;\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const PolyButton = ({\n  variant = 'contained',\n  size = 'medium',\n  color = 'primary',\n  disabled = false,\n  label,\n  ...props\n}: PolyButtonProps) => {\n  const disabled_status = disabled\n    ? 'disabled' : '';\n  return (\n    <polybutton\n      type=\"button\"\n      className={[\n        'poly-button',\n        `poly-button--${variant}`,\n        `poly-button--${color}`,\n        `poly-button--${size}`,\n        disabled_status\n      ].join(' ')}\n      //      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </polybutton>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAOA;AANA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAOA;AAAA;AACA;AAEA;AAGA;AA1BA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}