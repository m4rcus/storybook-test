{"version":3,"file":"main.467b16bf5b3393cacd04.hot-update.js","sources":["webpack:///./stories/Button.stories.tsx","webpack:///./stories/Button.tsx","webpack:///./stories/Header.tsx","webpack:///./stories/PolyButton.stories.tsx","webpack:///./stories/PolyButton.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { Button } from './Button';\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: 'Example/Button',\\n  component: Button,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n} as ComponentMeta<typeof Button>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  size: 'small',\\n  label: 'Button',\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":48,\"line\":17},\"endLoc\":{\"col\":78,\"line\":17},\"startBody\":{\"col\":48,\"line\":17},\"endBody\":{\"col\":78,\"line\":17}},\"Secondary\":{\"startLoc\":{\"col\":48,\"line\":17},\"endLoc\":{\"col\":78,\"line\":17},\"startBody\":{\"col\":48,\"line\":17},\"endBody\":{\"col\":78,\"line\":17}},\"Large\":{\"startLoc\":{\"col\":48,\"line\":17},\"endLoc\":{\"col\":78,\"line\":17},\"startBody\":{\"col\":48,\"line\":17},\"endBody\":{\"col\":78,\"line\":17}},\"Small\":{\"startLoc\":{\"col\":48,\"line\":17},\"endLoc\":{\"col\":78,\"line\":17},\"startBody\":{\"col\":48,\"line\":17},\"endBody\":{\"col\":78,\"line\":17}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { Button } from './Button';\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: 'Example/Button',\n  component: Button,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n} as ComponentMeta<typeof Button>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Small.parameters };","import React from 'react';\nimport './button.css';\n\ninterface ButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor,\n  label,\n  ...props\n}: ButtonProps) => {\n  const mode = primary\n    ? 'storybook-button--primary'\n    : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(\n        ' '\n      )}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n","import React from 'react';\n\nimport { Button } from './Button';\nimport './header.css';\n\ntype User = {\n  name: string;\n};\n\ninterface HeaderProps {\n  user?: User;\n  onLogin: () => void;\n  onLogout: () => void;\n  onCreateAccount: () => void;\n}\n\nexport const Header = ({ user, onLogin, onLogout, onCreateAccount }: HeaderProps) => (\n  <header>\n    <div className=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        {user ? (\n          <>\n            <span className=\"welcome\">\n              Welcome, <b>{user.name}</b>!\n            </span>\n            <Button size=\"small\" onClick={onLogout} label=\"Log out\" />\n          </>\n        ) : (\n          <>\n            <Button size=\"small\" onClick={onLogin} label=\"Log in\" />\n            <Button primary size=\"small\" onClick={onCreateAccount} label=\"Sign up\" />\n          </>\n        )}\n      </div>\n    </div>\n  </header>\n);\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { PolyButton } from './PolyButton';\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: 'Example/PolyButton',\\n  component: PolyButton,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n} as ComponentMeta<typeof PolyButton>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof PolyButton> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  size: 'small',\\n  label: 'Button',\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":52,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":52,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}},\"Secondary\":{\"startLoc\":{\"col\":52,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":52,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}},\"Large\":{\"startLoc\":{\"col\":52,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":52,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}},\"Small\":{\"startLoc\":{\"col\":52,\"line\":17},\"endLoc\":{\"col\":82,\"line\":17},\"startBody\":{\"col\":52,\"line\":17},\"endBody\":{\"col\":82,\"line\":17}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { PolyButton } from './PolyButton';\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: 'Example/PolyButton',\n  component: PolyButton,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n} as ComponentMeta<typeof PolyButton>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: ComponentStory<typeof PolyButton> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Small.parameters };","import React from 'react';\nimport './button.css';\n\ninterface ButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  variant?: 'contained' | 'outlined' | 'text';\n  /**\n   * What background color to use\n   */\n  color?: 'primary' | 'error' | 'warning' | 'success' | 'info';\n   /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  variant = 'contained',\n  size = 'medium',\n  backgroundColor,\n  label,\n  ...props\n}: ButtonProps) => {\n  const mode = primary\n    ? 'storybook-button--primary'\n    : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${variant}`, `storybook-button--${size}`, mode].join(\n        ' '\n      )}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAAA;AAyBA;AACA;AACA;AACA;AAMA;AALA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAtBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAEA;AACA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAtCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChvDA;AACA;AAAA;AAyBA;AACA;AACA;AACA;AAMA;AALA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAtBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}